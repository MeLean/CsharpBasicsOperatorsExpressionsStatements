using System;
/* Write a Boolean expression that returns if the bit at position p (counting from 0, starting from the right)
 * in given integer number n has value of 1. Examples:
 * n	    binary representation of n	p	bit @ p == 1
 * 5	    00000000 00000101	        2	true
 * 0	    00000000 00000000	        9	false
 * 15	    00000000 00001111	        1	true
 * 5343	    00010100 11011111	        7	true
 * 62241	11110011 00100001	        11	false */

class CheckBitAtGivenPosition
{
    static void Main()
    {
        int number = 0;
        int position = 0;
        Console.WriteLine("Enter a integer (n) and the position (p) of the bit that value will be checked: ");

        if (int.TryParse(Console.ReadLine(), out number) && int.TryParse(Console.ReadLine(), out position))
        {
            Console.Clear();
            int newNum = number >> position;
            string binaryNumber = Convert.ToString(number, 2);
            Console.WriteLine("n\tbinary representation\tp\tbit @ p == 1");
            Console.WriteLine("{0}\t{1}\t{2}\t{3}", number, binaryNumber.PadLeft(16, '0'), position, (newNum % 2 == 1));
        }
        else
        {
            Console.WriteLine("You have entered invalid data!");
        }
    }
}
