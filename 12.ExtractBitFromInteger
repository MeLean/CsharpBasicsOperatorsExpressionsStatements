using System;
/* Write an expression that extracts from given integer n the value of given bit at index p. 
 * Examples:
 * n	    binary representation	p	bit @ p
 * 5	    00000000 00000101	    2	1
 * 0	    00000000 00000000	    9	0
 * 15	    00000000 00001111	    1	1
 * 5343	    00010100 11011111	    7	1
 * 62241	11110011 00100001	    11	0 */
class ExtractBitFromInteger
{
    static void Main()
    {
        int number = 0;
        int position = 0;
        Console.WriteLine("Enter a integer (n) and the position (p) of the bit which value will be extracted: ");

        if (int.TryParse(Console.ReadLine(), out number) && int.TryParse(Console.ReadLine(), out position))
        {
            Console.Clear();
            int newNum = number >> position;
            string binaryNumber = Convert.ToString(number, 2);
            Console.WriteLine("n\tbinary representation\tp\tbit @ p");
            Console.WriteLine("{0}\t{1}\t{2}\t{3}", number, binaryNumber.PadLeft(16, '0'), position, newNum % 2);
        }
        else
        {
            Console.WriteLine("You have entered invalid data!");
        }
    }
}
